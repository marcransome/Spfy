{"name":"Spfy","tagline":"A command-line tool for generating XSPF playlists from audio file metadata.","body":"### Overview\r\n**Spfy** is a command-line tool for generating [XSPF](http://xspf.org/) playlists from metadata stored in several popular audio formats and is developed entirely in [Ruby](http://www.ruby-lang.org/).  It takes one or more local directory paths as input, extracts metadata tags from any audio files that it encounters, and generates a valid XSPF playlist.\r\n\r\n### Prerequisites\r\nA working Ruby installation (version 1.9 or greater) is required for Spfy to work, but this is outside the scope of this guide.  For more information refer to the [official installation procedure](http://www.ruby-lang.org/en/downloads/).\r\n\r\n[TagLib](http://developer.kde.org/~wheeler/taglib.html) is also required.  Follow the steps below (taken from the [taglib-ruby installation guide](http://robinst.github.com/taglib-ruby/)) to install the necessary files for your respective system type:\r\n\r\n| System:       |  Command:                          |\r\n|---------------|------------------------------------|\r\n| Debian/Ubuntu | `sudo apt-get install libtag1-dev` |\r\n| Fedora/RHEL   | `sudo yum install taglib-devel`    |\r\n| Brew          | `brew install taglib`              |\r\n| MacPorts      | `sudo port install taglib`         |\r\n\r\n### Installation\r\nWith the prerequisites above taken care of Spfy can be installed with the following command:\r\n\r\n\t$ gem install spfy\r\n\r\n### Using Spfy\r\nBy default, Spfy will output a formatted XSPF playlist to the standard output stream that will include _location_, _title_, _creator_, _album_, and _trackNum_ elements for each audio file where available.\r\n\r\nThe general syntax for Spfy is `spfy [options] dir1 ... dirN`, where _dir1 ... dirN_ is one or more paths to directories containing audio files.\r\n\r\nFor example:\r\n\r\n\t$ spfy ~/music\r\n\t\r\n..will produce the following output (where ~/music contains one audio file with valid metadata):\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<playlist version=\"1\" xmlns=\"http://xspf.org/ns/0/\">\r\n\t<trackList>\r\n\t\t<track>\r\n\t\t\t<location>file:///Users/spfy/music/03%20A%20Stitch%20In%20Time.mp3</location>\r\n\t\t\t<title>A Stitch In Time</title>\r\n\t\t\t<creator>The Smashing Pumpkins</creator>\r\n\t\t\t<album>Teargarden by Kaleidyscope</album>\r\n\t\t\t<trackNum>3</trackNum>\r\n\t\t</track>\r\n\t</trackList>\r\n</playlist>\r\n```\r\n\r\nSpfy supports multiple directory paths (e.g. `spfy /dir1 /dir2`) and traverses each directory recursively by default.  Unsupported files and empty directories in a directory tree are silently ignored and will not impact Spfy's output.\r\n\r\nCommand-line arguments allow you to control which elements Spfy outputs:\r\n\r\n    -f, --no-location                Suppress file location output\r\n    -t, --no-title                   Suppress track title in output\r\n    -a, --no-artist                  Suppress artist name in output\r\n    -l, --no-album                   Suppress album name in output\r\n    -n, --no-tracknum                Suppress track number in output\r\n\r\nFor additional options use `spfy --help`.\r\n\r\n### License\r\nSpfy is free software, and you are welcome to redistribute it under certain conditions.  See the [GNU General Public License](http://www.gnu.org/licenses/gpl.html) for more details.\r\n\r\n### Acknowledgments\r\nSpfy uses the following third party software components:\r\n \r\n* [taglib-ruby](http://robinst.github.com/taglib-ruby/) by Robin Stocker\r\n\r\n### Comments or suggestions?\r\nEmail me at [marc.ransome@fidgetbox.co.uk](mailto://marc.ransome@fidgetbox.co.uk) with bug reports, feature requests or general comments and follow [@marcransome](http://www.twitter.com/marcransome) for updates.\r\n","google":"UA-31478860-1","note":"Don't delete this file! It's used internally to help with page regeneration."}